name: "desktop-builds"
on:
  workflow_dispatch:
    # This Action only starts when you go to Actions and manually run the workflow.
jobs:
  package:
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-24.04, ubuntu-latest]
        go-version: [1.24.1]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1
      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get -yq update
          DISTRO=$(lsb_release -rs) # Get the distribution version (e.g., "22.04", "24.04")
          if [[ "$DISTRO" == "20.04" ]]; then
            sudo apt-get -yq install libgtk-3-0 libwebkit2gtk-4.0-dev gcc-aarch64-linux-gnu
          elif [[ "$DISTRO" == "22.04" ]]; then
            sudo apt-get -yq install libgtk-3-0 libwebkit2gtk-4.0-dev gcc-aarch64-linux-gnu
          elif [[ "$DISTRO" == "24.04" ]]; then
            sudo apt-get -yq install libgtk-3-0 libwebkit2gtk-4.1-dev gcc-aarch64-linux-gnu
          else
            echo "Unsupported Linux distribution: $DISTRO"
            exit 1 # Fail the workflow if the distribution is not supported
          fi
      # You may need to manually build you frontend here, unless you have configured frontend build and install commands in wails.json.
      - name: Get Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.10.2
      - name: Install zig (cgo Windows builds)
        if: matrix.platform == 'ubuntu-24.04'
        uses: mlugg/setup-zig@v2
        with:
          version: 0.14.1
      - name: OSX - Enable dmg creation
        if: matrix.platform == 'macos-latest'
        run: |
          npm install -g appdmg
          echo ' { "title": "Tella", "contents": [ { "x": 448, "y": 344, "type": "link", "path": "/Applications" }, { "x": 192, "y": 344, "type": "file", "path": "./build/bin/Tella-Desktop.app" } ] } ' > dmg.json
      - name: Build OSX 
        if: matrix.platform == 'macos-latest'
        # TODO: get OSX signing working
        run: |
          echo "Removing old .app"
          rm -rf "Tella-Desktop.app" # Tella-Desktop.app is a folder, while Tella.app is the executable inside that folder -- confusing? Yes, unfortunately!
          wails build --platform "darwin/universal" --ldflags="-s -w" -o "Tella.app"
          appdmg ./dmg.json ./build/bin/tella.dmg
      - name: Build for Windows (on linux!)
        if: matrix.platform == 'ubuntu-24.04'
        run: |
          CGO_ENABLED=1 GOOS=windows GOARCH=amd64 CC="zig cc -target x86_64-windows" CXX="zig cc -target x86_64-windows" wails build -ldflags "-w -s" -o tella.exe
      - name: Build Linux
        if: matrix.platform == 'ubuntu-latest'
        run: |
          wails build --platform "linux/amd64" --upx --tags "webkit2_41" -o "tella"
      - name: upload artifacts macOS
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: wails-binaries-macos
          path: build/bin/*
      - name: upload artifacts windows
        if: matrix.platform == 'ubuntu-24.04'
        uses: actions/upload-artifact@v4
        with:
          name: wails-binaries-windows
          path: build/bin/*
      - name: upload artifacts linux
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: wails-binaries-linux
          path: build/bin/*
